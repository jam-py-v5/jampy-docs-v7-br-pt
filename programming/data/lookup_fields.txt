=============
Campos Lookup
=============

Um campo lookup pode exibir um valor amigável para o usuário que está vinculado a outro valor
em outra tabela ou lista de valores. Por exemplo, o campo lookup pode 
exibir o nome de um cliente que está vinculado ao respectivo número de ID do cliente em 
uma tabela ou lista de outro item.

Ao inserir um valor no campo lookup, o usuário escolhe a partir de uma lista de valores.
Isso pode tornar a entrada de dados mais rápida e precisa.

Os dois tipos de campos lookup que você pode criar são: um campo lookup 
baseado em item lookup e uma lista de valores.

Campo lookup baseado em item lookup
===================================

No framework, você pode adicionar um campo a um item para buscar informações na tabela de outro item. 
Por exemplo, no catálogo **Álbuns** do aplicativo de demonstração existe o
campo lookup **Artista**.

.. image:: /programming/_images/albums_edit_form_jampy.png
	:align: center
	:alt: albums_edit_form_jampy.png

Para definir o valor do campo, o usuário deve clicar no botão à direita do campo de entrada 
e selecionar um registro do catálogo ''Artistas'' que será exibido.
Então o valor desse campo será o ID do registro.  
Outra forma de definir o valor do campo é usar a digitação antecipada (typeahead), 
se a opção **Typeahead** estiver marcada no 
:doc:`Diálogo do Editor de Campo </admin/items/field_editor_dialog>`:

.. image:: /programming/_images/artist_field_jampy.png
	:align: center
	:alt: Lookup field

Para tais campos, **Item Lookup** e **Campo Lookup** devem ser especificados no
:doc:`Diálogo do Editor de Campo </admin/items/field_editor_dialog>`:

A consulta SQL que é gerada no servidor, quando o método ``open`` é chamado 
e o parâmetro ``expanded`` é definido como verdadeiro (padrão), utiliza a cláusula ``JOIN`` para 
obter os valores de lookup para tais campos. Assim, cada um desses campos tem um par de valores: 
o primeiro valor armazena uma referência a um registro na tabela do item de lookup (o valor 
do seu campo de chave primária), e o segundo valor contém o valor do campo lookup nesse registro.

Para acessar esses valores, use as seguintes propriedades dos campos lookup:

.. csv-table:: 
   :header: Cliente, Servidor, Descrição
   :widths: 10, 10, 80

   :doc:`value </refs/client/field/at_value>`, :doc:`value </refs/server/field/at_value>`, "Um valor, que é armazenado na tabela do item, que é uma referência a um registro na tabela do item de lookup."
   :doc:`lookup_value </refs/client/field/at_lookup_value>`, :doc:`lookup_value </refs/server/field/at_lookup_value>`, "Um valor do campo de lookup na tabela do item de lookup."

Às vezes, há a necessidade de ter dois ou mais valores do mesmo registro na 
tabela do item de lookup. Por exemplo, o diário "Faturas" no Demo tem vários 
campos de lookup ("Cliente", "Endereço de Cobrança", "Cidade de Cobrança", e assim por diante) 
que possuem informações sobre um cliente, todas armazenadas em um único registro na 
tabela do item "Clientes", descrevendo esse cliente. Para evitar a criação 
de campos desnecessários na tabela do item "Faturas", armazenando a mesma referência 
a um registro, e criando ``JOIN`` s para cada um desses campos, todos os campos de lookup 
exceto "Clientes" têm o valor **Campo Mestre** apontando para o campo "Clientes".
Esses campos não têm campos correspondentes na tabela subjacente do banco de dados dos itens. 
O valor da sua propriedade de valor é sempre igual à propriedade de valor do 
campo mestre, e a consulta SQL gerada no servidor, quando o método 
``open`` é chamado, utiliza uma única cláusula ``JOIN`` para todos esses campos.

.. image:: /programming/_images/master_field_example_jampy.png
	:align: center
	:alt: Master field example
	
Quando o usuário clica no botão à direita do campo de entrada ou usa o tipo de pesquisa (typeahead),
o aplicativo cria uma cópia do item de lookup do campo, define o atributo
:doc:`lookup_field </refs/client/item/at_lookup_field>`
para o campo, e
dispara o evento 
:doc:`on_field_select_value </refs/client/item/on_field_select_value>`.
Escreva esse manipulador de evento para especificar os campos que serão exibidos, 
configurar filtros para o item de lookup, antes que ele seja aberto e exibido para 
que o usuário selecione um valor para o campo.

O campo de lookup no item de lookup também pode ser um campo de lookup, por exemplo:

.. image:: /programming/_images/tracks_lookup_field_jampy.png
	:align: center
	:alt: tracks_lookup_field_jampy.png
	
Para configurar tal campo, use os atributos **Lookup field 2** e **Lookup field 3**.
	

Lista de valores
================

Às vezes, a fonte de um campo de lookup pode ser definida como uma lista de valores. Por 
exemplo, o campo **MediaType** no catálogo **Tracks** do 
:doc:`Projeto Demo </intro/demo_project>` tem o atributo **Lookup value list** configurado 
para a lista de lookup MediaTypes:

.. image:: /programming/_images/mediatype_field_jampy.png
	:align: center
	:alt: Definição do campo MediaType

Use o :doc:`Lookup List Dialog </admin/lookup_lists>` da tarefa para definir 
tais listas de lookup.

Veja também
============

:doc:`Campos de seleção </intro/tutorial01/lookup_fields>`

:doc:`Listas de seleção </intro/tutorial01/lookup_list>`
